#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
#                                                                                                   #
#                        O W N  H O T K E Y S  S E T T I N G S                                      #
#                                                                                                   #
#                                                                                                   #
#    Installation manually:                                                                         #
#       • copy "ownhotkeys.template.properties" as "ownhotkeys.properties" into folder:             #
#           @UserProfileDir & '\AppData\Local\AutoIt v3\SciTE\'                                     #
#       • in file SciTEUser.properties:                                                             #
#           add line: import ownhotkeys                                                             #
#       • copy "shell.dll" in the folder with your Lua scripts                                      #
#           (own folder, i.e. inside USER-DIR recommended)                                          #
#           shell.dll is needed to call au3-files.                                                  #
#       • be sure, that your Lua script path is added to package.cpath in SciTEStartup.lua          #
#         Recommended way:                                                                          #
#         - create own property for your Lua script path in SciTEUser.properties                    #
#           Lua.User.Scripts.Path=C:\YOUR\PATH\LUA\SCRIPTS                                          #
#         - use a global Lua variable LUA_USER_PATH and add it to your SciTEStartup.lua as below    #
#           (position: top of script)                                                               #
#                                                                                                   #
#           local sUserLua = props["Lua.User.Scripts.Path"] .. "\\"                                 #
#           LUA_USER_PATH = sUserLua .. "\\?.dll;" .. sUserLua .. "\\?\\?.dll;"                     #
#           LUA_USER_PATH = LUA_USER_PATH .. sUserLua .. "\\?.lua;" .. sUserLua .. "\\?\\?.lua;"    #
#           ------------------------------------------------------------------------------------    #
#           package.cpath = LUA_USER_PATH..package.cpath                                            #
#                                                                                                   #
#           So you can store dll files (and Lua files too) as:                                      #
#              ..\own_folder\name.dll or                                                            #
#              ..\own_folder\name\name.dll                                                          #
#           with access to this from any script.                                                    #
#       • copy "OHKfuncs.lua" and "Ownhotkeys.lua" in your own Lua scripts folder                   #
#       • copy "SciTE_Output.au3" to your user include folder                                       #
#          Its requiered to send output from called au3-files to SciTE. Replace "ConsoleWrite()"    #
#          with "_SciTE_Output()" in related au3-files and include "SciTE_Output.au3" there.        #
#       • insert function to load user files in SciTEStartup.lua (behind function LoadLuaFile):     #
#                                                                                                   #
#           function LoadUserLuaFile(file)                                                          #
#               LoadLuaFile(file, props["Lua.User.Scripts.Path"] .. "\\")                           #
#           end -- LoadUserLuaFile()                                                                #
#                                                                                                   #
#       • add at the end of SciTEStartup.lua                                                        #
#           LoadUserLuaFile("Ownhotkeys.lua")                                                       #
#       • now set the properties (indicator-key, caret settings, using hardcoded hotkeys,           #
#                                 Lua script path, hotkeys)                                         #
#       • Restart SciTE and use your hotkeys. You can open the propertiy file anytime about         #
#         menu: Options.                                                                            #
#                                                                                                   #
#    Using Own Hotkeys:                                                                             #
#       • hit Ctrl + Indicator-key                                                                  #
#       • hold pressed the Ctrl-key                                                                 #
#       • release Indicator-key only                                                                #
#       • hit second key from your sequence                                                         #
#                                                                                                   #
#    Write commands for hotkeys as:                                                                 #
#       Use commands without quotation marks!                                                       #
#       • "[script.lua] function_lua(param)" from this script                                       #
#       • "C:\path\script.lua function_lua(param)" from this script                                 #
#           if script.lua has no path --> encapsulate the script.lua in square braces,              #
#           the path of the own.mode.func.path property is used than.                               #
#       • lua-commands as string (it's possible to insert full scripts here)                        #
#         example (inserts a small Lua function header):                                            #
#           own.mode.cmd.xx=if props['FileExt']:upper() == 'LUA' then \                             #
#           editor:InsertText(editor.CurrentPos, ('-'):rep(100) .. \                                #
#           '\n--[[ \nin...:\t\nout..:\t\n]]\n'..('-'):rep(100)..'\n\n'..('-'):rep(100)) end        #
#       • "dofile ('C:\\full-path\\file.lua')"                                                      #
#       • to break command-lines use " \" at the end of text, line is connected during scanning.    #
#       • own.mode.descript.xx includes the key sequence. Add "|Your-Description" behind this.      #
#                                                                                                   #
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#

#~ KeySequence to activate OwnMode: Ctrl+INDICATOR
#~ example:
##== INDICATOR = Win-key
#~ own.mode.indicator=91
#~ own.mode.indicator.descript=Win

##== INDICATOR =
own.mode.indicator=
own.mode.indicator.descript=

##== CARET
##== If indicator key are pressed, the caret change its properties until own mode ends.
#~ fore color as BGR
own.mode.caret.indicator.fore=255
##== If repeat mode is active, the caret color changes to following value until mode ends.
own.mode.caret.repeat.fore=12433718
#~ 1=small, 2=middle, 3=width
own.mode.caret.width=3
#~ period time in ms
own.mode.caret.period=300
#~ 1=small, 2=block
own.mode.caret.style=2

##== HARD CODED HOTKEYS
#~ MOVE SELECTED LINES on/off (1/0), HotKeys: Ctrl+Shift+ArrowUp/ +ArrowDown
own.mode.move.lines=1
#~ MOVE SELECTED TEXT IN LINES on/off (1/0), HotKeys: Ctrl+Alt+ArrowUp/ +ArrowDown/ +ArrowLeft/ +ArrowRight
own.mode.move.selections=1
#~ CURSOR TO PREVIOUS/ NEXT LINE AT LINE END POSITION on/off (1/0), HotKeys: Alt+ArrowUp/ +ArrowDown
own.mode.cursor.line.end=1

##== REPEAT on/off (1/0), repeats character left from cursor n-times. For details see: OHKfuncs - OHK.Repeat()
own.mode.repeat=1

#~ Path with scripts that contain functions called by Hotkeys.
#~ By having a property for your path, you can use it so: "own.mode.func.path=$(Lua.User.Scripts.Path)"
#~ Don't use a trailing Backslash in your path!
own.mode.func.path=

#~ Ctrl+INDICATOR, Ctrl+Backspace
own.mode.cmd.8=
own.mode.descript.8=Ctrl+$(own.mode.indicator.descript), Ctrl+Backspace

#~ Ctrl+INDICATOR, Ctrl+0
own.mode.cmd.48=
own.mode.descript.48=Ctrl+$(own.mode.indicator.descript), Ctrl+0

#~ Ctrl+INDICATOR, Ctrl+1
own.mode.cmd.49=
own.mode.descript.49=Ctrl+$(own.mode.indicator.descript), Ctrl+1

#~ Ctrl+INDICATOR, Ctrl+2
own.mode.cmd.50=
own.mode.descript.50=Ctrl+$(own.mode.indicator.descript), Ctrl+2

#~ Ctrl+INDICATOR, Ctrl+3
own.mode.cmd.51=
own.mode.descript.51=Ctrl+$(own.mode.indicator.descript), Ctrl+3

#~ Ctrl+INDICATOR, Ctrl+4
own.mode.cmd.52=
own.mode.descript.52=Ctrl+$(own.mode.indicator.descript), Ctrl+4

#~ Ctrl+INDICATOR, Ctrl+5
own.mode.cmd.53=
own.mode.descript.53=Ctrl+$(own.mode.indicator.descript), Ctrl+5

#~ Ctrl+INDICATOR, Ctrl+6
own.mode.cmd.54=
own.mode.descript.54=Ctrl+$(own.mode.indicator.descript), Ctrl+6

#~ Ctrl+INDICATOR, Ctrl+7
own.mode.cmd.55=
own.mode.descript.55=Ctrl+$(own.mode.indicator.descript), Ctrl+7

#~ Ctrl+INDICATOR, Ctrl+8
own.mode.cmd.56=
own.mode.descript.56=Ctrl+$(own.mode.indicator.descript), Ctrl+8

#~ Ctrl+INDICATOR, Ctrl+9
own.mode.cmd.57=
own.mode.descript.57=Ctrl+$(own.mode.indicator.descript), Ctrl+9

#~ Ctrl+INDICATOR, Ctrl+A
own.mode.cmd.65=
own.mode.descript.65=Ctrl+$(own.mode.indicator.descript), Ctrl+A

#~ Ctrl+INDICATOR, Ctrl+B
own.mode.cmd.66=
own.mode.descript.66=Ctrl+$(own.mode.indicator.descript), Ctrl+B

#~ Ctrl+INDICATOR, Ctrl+C
own.mode.cmd.67=
own.mode.descript.67=Ctrl+$(own.mode.indicator.descript), Ctrl+C

#~ Ctrl+INDICATOR, Ctrl+D
own.mode.cmd.68=
own.mode.descript.68=Ctrl+$(own.mode.indicator.descript), Ctrl+D

#~ Ctrl+INDICATOR, Ctrl+E
own.mode.cmd.69=
own.mode.descript.69=Ctrl+$(own.mode.indicator.descript), Ctrl+E

#~ Ctrl+INDICATOR, Ctrl+F
own.mode.cmd.70=
own.mode.descript.70=Ctrl+$(own.mode.indicator.descript), Ctrl+F

#~ Ctrl+INDICATOR, Ctrl+G
own.mode.cmd.71=
own.mode.descript.71=Ctrl+$(own.mode.indicator.descript), Ctrl+G

#~ Ctrl+INDICATOR, Ctrl+H
own.mode.cmd.72=
own.mode.descript.72=Ctrl+$(own.mode.indicator.descript), Ctrl+H

#~ Ctrl+INDICATOR, Ctrl+I
own.mode.cmd.73=
own.mode.descript.73=Ctrl+$(own.mode.indicator.descript), Ctrl+I

#~ Ctrl+INDICATOR, Ctrl+J
own.mode.cmd.74=
own.mode.descript.74=Ctrl+$(own.mode.indicator.descript), Ctrl+J

#~ Ctrl+INDICATOR, Ctrl+K
own.mode.cmd.75=
own.mode.descript.75=Ctrl+$(own.mode.indicator.descript), Ctrl+K

#~ Ctrl+INDICATOR, Ctrl+L
own.mode.cmd.76=
own.mode.descript.76=Ctrl+$(own.mode.indicator.descript), Ctrl+L

#~ Ctrl+INDICATOR, Ctrl+M
own.mode.cmd.77=
own.mode.descript.77=Ctrl+$(own.mode.indicator.descript), Ctrl+M

#~ Ctrl+INDICATOR, Ctrl+N
own.mode.cmd.78=
own.mode.descript.78=Ctrl+$(own.mode.indicator.descript), Ctrl+N

#~ Ctrl+INDICATOR, Ctrl+O
own.mode.cmd.79=
own.mode.descript.79=Ctrl+$(own.mode.indicator.descript), Ctrl+O

#~ Ctrl+INDICATOR, Ctrl+P
own.mode.cmd.80=
own.mode.descript.80=Ctrl+$(own.mode.indicator.descript), Ctrl+P

#~ Ctrl+INDICATOR, Ctrl+Q
own.mode.cmd.81=
own.mode.descript.81=Ctrl+$(own.mode.indicator.descript), Ctrl+Q

#~ Ctrl+INDICATOR, Ctrl+R
own.mode.cmd.82=
own.mode.descript.82=Ctrl+$(own.mode.indicator.descript), Ctrl+R

#~ Ctrl+INDICATOR, Ctrl+S
own.mode.cmd.83=
own.mode.descript.83=Ctrl+$(own.mode.indicator.descript), Ctrl+S

#~ Ctrl+INDICATOR, Ctrl+T
own.mode.cmd.84=
own.mode.descript.84=Ctrl+$(own.mode.indicator.descript), Ctrl+T

#~ Ctrl+INDICATOR, Ctrl+U
own.mode.cmd.85=
own.mode.descript.85=Ctrl+$(own.mode.indicator.descript), Ctrl+U

#~ Ctrl+INDICATOR, Ctrl+V
own.mode.cmd.86=
own.mode.descript.86=Ctrl+$(own.mode.indicator.descript), Ctrl+V

#~ Ctrl+INDICATOR, Ctrl+W
own.mode.cmd.87=
own.mode.descript.87=Ctrl+$(own.mode.indicator.descript), Ctrl+W

#~ Ctrl+INDICATOR, Ctrl+X
own.mode.cmd.88=
own.mode.descript.88=Ctrl+$(own.mode.indicator.descript), Ctrl+X

#~ Ctrl+INDICATOR, Ctrl+Y
own.mode.cmd.89=
own.mode.descript.89=Ctrl+$(own.mode.indicator.descript), Ctrl+Y

#~ Ctrl+INDICATOR, Ctrl+Z
own.mode.cmd.90=
own.mode.descript.90=Ctrl+$(own.mode.indicator.descript), Ctrl+Z

#~ Ctrl+INDICATOR, Ctrl+Win
own.mode.cmd.91=
own.mode.descript.91=Ctrl+$(own.mode.indicator.descript), Ctrl+Win

#~ Ctrl+INDICATOR, Ctrl+NUMPAD_0
own.mode.cmd.96=
own.mode.descript.96=Ctrl+$(own.mode.indicator.descript), Ctrl+NUMPAD_0

#~ Ctrl+INDICATOR, Ctrl+NUMPAD_1
own.mode.cmd.97=
own.mode.descript.97=Ctrl+$(own.mode.indicator.descript), Ctrl+NUMPAD_1

#~ Ctrl+INDICATOR, Ctrl+NUMPAD_2
own.mode.cmd.98=
own.mode.descript.98=Ctrl+$(own.mode.indicator.descript), Ctrl+NUMPAD_2

#~ Ctrl+INDICATOR, Ctrl+NUMPAD_3
own.mode.cmd.99=
own.mode.descript.99=Ctrl+$(own.mode.indicator.descript), Ctrl+NUMPAD_3

#~ Ctrl+INDICATOR, Ctrl+NUMPAD_4
own.mode.cmd.100=
own.mode.descript.100=Ctrl+$(own.mode.indicator.descript), Ctrl+NUMPAD_4

#~ Ctrl+INDICATOR, Ctrl+NUMPAD_5
own.mode.cmd.101=
own.mode.descript.101=Ctrl+$(own.mode.indicator.descript), Ctrl+NUMPAD_5

#~ Ctrl+INDICATOR, Ctrl+NUMPAD_6
own.mode.cmd.102=
own.mode.descript.102=Ctrl+$(own.mode.indicator.descript), Ctrl+NUMPAD_6

#~ Ctrl+INDICATOR, Ctrl+NUMPAD_7
own.mode.cmd.103=
own.mode.descript.103=Ctrl+$(own.mode.indicator.descript), Ctrl+NUMPAD_7

#~ Ctrl+INDICATOR, Ctrl+NUMPAD_8
own.mode.cmd.104=
own.mode.descript.104=Ctrl+$(own.mode.indicator.descript), Ctrl+NUMPAD_8

#~ Ctrl+INDICATOR, Ctrl+NUMPAD_9
own.mode.cmd.105=
own.mode.descript.105=Ctrl+$(own.mode.indicator.descript), Ctrl+NUMPAD_9

#~ Ctrl+INDICATOR, Ctrl+NUMPAD_Mul
own.mode.cmd.106=
own.mode.descript.106=Ctrl+$(own.mode.indicator.descript), Ctrl+NUMPAD_Mul

#~ Ctrl+INDICATOR, Ctrl+NUMPAD_Add
own.mode.cmd.107=
own.mode.descript.107=Ctrl+$(own.mode.indicator.descript), Ctrl+NUMPAD_Add

#~ Ctrl+INDICATOR, Ctrl+NUMPAD_Sub
own.mode.cmd.109=
own.mode.descript.109=Ctrl+$(own.mode.indicator.descript), Ctrl+NUMPAD_Sub

#~ Ctrl+INDICATOR, Ctrl+NUMPAD_Dot
own.mode.cmd.110=
own.mode.descript.110=Ctrl+$(own.mode.indicator.descript), Ctrl+NUMPAD_Dot

#~ Ctrl+INDICATOR, Ctrl+NUMPAD_Diff
own.mode.cmd.111=
own.mode.descript.111=Ctrl+$(own.mode.indicator.descript), Ctrl+NUMPAD_Diff

#~ Ctrl+INDICATOR, Ctrl+F1
own.mode.cmd.112=
own.mode.descript.112=Ctrl+$(own.mode.indicator.descript), Ctrl+F1

#~ Ctrl+INDICATOR, Ctrl+F2
own.mode.cmd.113=
own.mode.descript.113=Ctrl+$(own.mode.indicator.descript), Ctrl+F2

#~ Ctrl+INDICATOR, Ctrl+F3
own.mode.cmd.114=
own.mode.descript.114=Ctrl+$(own.mode.indicator.descript), Ctrl+F3

#~ Ctrl+INDICATOR, Ctrl+F4
own.mode.cmd.115=
own.mode.descript.115=Ctrl+$(own.mode.indicator.descript), Ctrl+F4

#~ Ctrl+INDICATOR, Ctrl+F5
own.mode.cmd.116=
own.mode.descript.116=Ctrl+$(own.mode.indicator.descript), Ctrl+F5

#~ Ctrl+INDICATOR, Ctrl+F6
own.mode.cmd.117=
own.mode.descript.117=Ctrl+$(own.mode.indicator.descript), Ctrl+F6

#~ Ctrl+INDICATOR, Ctrl+F7
own.mode.cmd.118=
own.mode.descript.118=Ctrl+$(own.mode.indicator.descript), Ctrl+F7

#~ Ctrl+INDICATOR, Ctrl+F8
own.mode.cmd.119=
own.mode.descript.119=Ctrl+$(own.mode.indicator.descript), Ctrl+F8

#~ Ctrl+INDICATOR, Ctrl+F9
own.mode.cmd.120=
own.mode.descript.120=Ctrl+$(own.mode.indicator.descript), Ctrl+F9

#~ Ctrl+INDICATOR, Ctrl+F10
own.mode.cmd.121=
own.mode.descript.121=Ctrl+$(own.mode.indicator.descript), Ctrl+F10

#~ Ctrl+INDICATOR, Ctrl+F11
own.mode.cmd.122=
own.mode.descript.122=Ctrl+$(own.mode.indicator.descript), Ctrl+F11

#~ Ctrl+INDICATOR, Ctrl+F12
own.mode.cmd.123=
own.mode.descript.123=Ctrl+$(own.mode.indicator.descript), Ctrl+F12

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#